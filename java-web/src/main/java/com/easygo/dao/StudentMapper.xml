<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easygo.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.easygo.domain.Student">
    <id column="Sid" jdbcType="CHAR" property="sid" />
    <result column="Sname" jdbcType="VARCHAR" property="sname" />
    <result column="Sidcard" jdbcType="CHAR" property="sidcard" />
    <result column="Ssex" jdbcType="CHAR" property="ssex" />
    <result column="Spassword" jdbcType="VARCHAR" property="spassword" />
    <result column="Sage" jdbcType="CHAR" property="sage" />
    <result column="Classr" jdbcType="VARCHAR" property="classr" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="specialtyid" jdbcType="INTEGER" property="specialtyid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Sid, Sname, Sidcard, Ssex, Spassword, Sage, Classr, profession, college, specialtyid
  </sql>
  <select id="selectByExample" parameterType="com.easygo.domain.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where Sid = #{sid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where Sid = #{sid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.easygo.domain.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.easygo.domain.Student">
    insert into student (Sid, Sname, Sidcard, 
      Ssex, Spassword, Sage, Classr, 
      profession, college, specialtyid
      )
    values (#{sid,jdbcType=CHAR}, #{sname,jdbcType=VARCHAR}, #{sidcard,jdbcType=CHAR}, 
      #{ssex,jdbcType=CHAR}, #{spassword,jdbcType=VARCHAR}, #{sage,jdbcType=CHAR}, #{classr,jdbcType=VARCHAR}, 
      #{profession,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, #{specialtyid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.easygo.domain.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        Sid,
      </if>
      <if test="sname != null">
        Sname,
      </if>
      <if test="sidcard != null">
        Sidcard,
      </if>
      <if test="ssex != null">
        Ssex,
      </if>
      <if test="spassword != null">
        Spassword,
      </if>
      <if test="sage != null">
        Sage,
      </if>
      <if test="classr != null">
        Classr,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="specialtyid != null">
        specialtyid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=CHAR},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="sidcard != null">
        #{sidcard,jdbcType=CHAR},
      </if>
      <if test="ssex != null">
        #{ssex,jdbcType=CHAR},
      </if>
      <if test="spassword != null">
        #{spassword,jdbcType=VARCHAR},
      </if>
      <if test="sage != null">
        #{sage,jdbcType=CHAR},
      </if>
      <if test="classr != null">
        #{classr,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="specialtyid != null">
        #{specialtyid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.easygo.domain.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.sid != null">
        Sid = #{record.sid,jdbcType=CHAR},
      </if>
      <if test="record.sname != null">
        Sname = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.sidcard != null">
        Sidcard = #{record.sidcard,jdbcType=CHAR},
      </if>
      <if test="record.ssex != null">
        Ssex = #{record.ssex,jdbcType=CHAR},
      </if>
      <if test="record.spassword != null">
        Spassword = #{record.spassword,jdbcType=VARCHAR},
      </if>
      <if test="record.sage != null">
        Sage = #{record.sage,jdbcType=CHAR},
      </if>
      <if test="record.classr != null">
        Classr = #{record.classr,jdbcType=VARCHAR},
      </if>
      <if test="record.profession != null">
        profession = #{record.profession,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.specialtyid != null">
        specialtyid = #{record.specialtyid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set Sid = #{record.sid,jdbcType=CHAR},
      Sname = #{record.sname,jdbcType=VARCHAR},
      Sidcard = #{record.sidcard,jdbcType=CHAR},
      Ssex = #{record.ssex,jdbcType=CHAR},
      Spassword = #{record.spassword,jdbcType=VARCHAR},
      Sage = #{record.sage,jdbcType=CHAR},
      Classr = #{record.classr,jdbcType=VARCHAR},
      profession = #{record.profession,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      specialtyid = #{record.specialtyid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.easygo.domain.Student">
    update student
    <set>
      <if test="sname != null">
        Sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="sidcard != null">
        Sidcard = #{sidcard,jdbcType=CHAR},
      </if>
      <if test="ssex != null">
        Ssex = #{ssex,jdbcType=CHAR},
      </if>
      <if test="spassword != null">
        Spassword = #{spassword,jdbcType=VARCHAR},
      </if>
      <if test="sage != null">
        Sage = #{sage,jdbcType=CHAR},
      </if>
      <if test="classr != null">
        Classr = #{classr,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="specialtyid != null">
        specialtyid = #{specialtyid,jdbcType=INTEGER},
      </if>
    </set>
    where Sid = #{sid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.easygo.domain.Student">
    update student
    set Sname = #{sname,jdbcType=VARCHAR},
      Sidcard = #{sidcard,jdbcType=CHAR},
      Ssex = #{ssex,jdbcType=CHAR},
      Spassword = #{spassword,jdbcType=VARCHAR},
      Sage = #{sage,jdbcType=CHAR},
      Classr = #{classr,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      specialtyid = #{specialtyid,jdbcType=INTEGER}
    where Sid = #{sid,jdbcType=CHAR}
  </update>
</mapper>