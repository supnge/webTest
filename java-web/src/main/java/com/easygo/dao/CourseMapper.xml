<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easygo.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.easygo.domain.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="schooltime" jdbcType="INTEGER" property="schooltime" />
    <result column="addr" jdbcType="INTEGER" property="addr" />
    <result column="credit" jdbcType="DECIMAL" property="credit" />
    <result column="courseInfo" jdbcType="VARCHAR" property="courseinfo" />
    <result column="teacherName" jdbcType="VARCHAR" property="teachername" />
    <result column="teacherInfo" jdbcType="VARCHAR" property="teacherinfo" />
    <result column="isFinish" jdbcType="BIT" property="isfinish" />
    <result column="specialtyId" jdbcType="INTEGER" property="specialtyid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, schooltime, addr, credit, courseInfo, teacherName, teacherInfo, isFinish, 
    specialtyId
  </sql>
  <select id="selectByExample" parameterType="com.easygo.domain.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.easygo.domain.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.easygo.domain.Course">
    insert into course (id, name, schooltime, 
      addr, credit, courseInfo, 
      teacherName, teacherInfo, isFinish, 
      specialtyId)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{schooltime,jdbcType=INTEGER}, 
      #{addr,jdbcType=INTEGER}, #{credit,jdbcType=DECIMAL}, #{courseinfo,jdbcType=VARCHAR}, 
      #{teachername,jdbcType=VARCHAR}, #{teacherinfo,jdbcType=VARCHAR}, #{isfinish,jdbcType=BIT}, 
      #{specialtyid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.easygo.domain.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="schooltime != null">
        schooltime,
      </if>
      <if test="addr != null">
        addr,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="courseinfo != null">
        courseInfo,
      </if>
      <if test="teachername != null">
        teacherName,
      </if>
      <if test="teacherinfo != null">
        teacherInfo,
      </if>
      <if test="isfinish != null">
        isFinish,
      </if>
      <if test="specialtyid != null">
        specialtyId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="schooltime != null">
        #{schooltime,jdbcType=INTEGER},
      </if>
      <if test="addr != null">
        #{addr,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=DECIMAL},
      </if>
      <if test="courseinfo != null">
        #{courseinfo,jdbcType=VARCHAR},
      </if>
      <if test="teachername != null">
        #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="teacherinfo != null">
        #{teacherinfo,jdbcType=VARCHAR},
      </if>
      <if test="isfinish != null">
        #{isfinish,jdbcType=BIT},
      </if>
      <if test="specialtyid != null">
        #{specialtyid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.easygo.domain.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.schooltime != null">
        schooltime = #{record.schooltime,jdbcType=INTEGER},
      </if>
      <if test="record.addr != null">
        addr = #{record.addr,jdbcType=INTEGER},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=DECIMAL},
      </if>
      <if test="record.courseinfo != null">
        courseInfo = #{record.courseinfo,jdbcType=VARCHAR},
      </if>
      <if test="record.teachername != null">
        teacherName = #{record.teachername,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherinfo != null">
        teacherInfo = #{record.teacherinfo,jdbcType=VARCHAR},
      </if>
      <if test="record.isfinish != null">
        isFinish = #{record.isfinish,jdbcType=BIT},
      </if>
      <if test="record.specialtyid != null">
        specialtyId = #{record.specialtyid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      schooltime = #{record.schooltime,jdbcType=INTEGER},
      addr = #{record.addr,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=DECIMAL},
      courseInfo = #{record.courseinfo,jdbcType=VARCHAR},
      teacherName = #{record.teachername,jdbcType=VARCHAR},
      teacherInfo = #{record.teacherinfo,jdbcType=VARCHAR},
      isFinish = #{record.isfinish,jdbcType=BIT},
      specialtyId = #{record.specialtyid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.easygo.domain.Course">
    update course
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="schooltime != null">
        schooltime = #{schooltime,jdbcType=INTEGER},
      </if>
      <if test="addr != null">
        addr = #{addr,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=DECIMAL},
      </if>
      <if test="courseinfo != null">
        courseInfo = #{courseinfo,jdbcType=VARCHAR},
      </if>
      <if test="teachername != null">
        teacherName = #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="teacherinfo != null">
        teacherInfo = #{teacherinfo,jdbcType=VARCHAR},
      </if>
      <if test="isfinish != null">
        isFinish = #{isfinish,jdbcType=BIT},
      </if>
      <if test="specialtyid != null">
        specialtyId = #{specialtyid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.easygo.domain.Course">
    update course
    set name = #{name,jdbcType=VARCHAR},
      schooltime = #{schooltime,jdbcType=INTEGER},
      addr = #{addr,jdbcType=INTEGER},
      credit = #{credit,jdbcType=DECIMAL},
      courseInfo = #{courseinfo,jdbcType=VARCHAR},
      teacherName = #{teachername,jdbcType=VARCHAR},
      teacherInfo = #{teacherinfo,jdbcType=VARCHAR},
      isFinish = #{isfinish,jdbcType=BIT},
      specialtyId = #{specialtyid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>